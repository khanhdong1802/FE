import React, { useEffect, useState, useCallback } from "react";
import { useParams } from "react-router-dom";
import CategoryCard from "../components/CategoryCard";
import FloatingButton from "../components/FloatingButton";
export default function GroupDashboardPage() {
  const { id: groupId } = useParams();
  const [groupInfo, setGroupInfo] = useState(null);
  const [categories, setCategories] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const fetchGroupData = useCallback(async () => {
    setLoading(true); // N√™n ƒë·∫∑t ·ªü ƒë·∫ßu ƒë·ªÉ c√≥ ph·∫£n h·ªìi t·∫£i
    setError(null); // Reset l·ªói tr∆∞·ªõc m·ªói l·∫ßn fetch
    try {
      // L·∫•y th√¥ng tin c∆° b·∫£n c·ªßa nh√≥m
      const resGroup = await fetch(`http://localhost:3000/api/auth/${groupId}`); // Gi·∫£ s·ª≠ API n√†y l·∫•y t√™n nh√≥m, m√¥ t·∫£,...
      if (!resGroup.ok) {
        const errorData = await resGroup.json().catch(() => ({})); // C·ªë g·∫Øng ƒë·ªçc l·ªói JSON
        throw new Error(
          errorData.message ||
            `L·∫•y th√¥ng tin nh√≥m th·∫•t b·∫°i, status: ${resGroup.status}`
        );
      }
      const groupDetails = await resGroup.json();

      // L·∫•y s·ªë d∆∞ T·ªîNG TH·ª∞C T·∫æ c·ªßa nh√≥m b·∫±ng API m·ªõi
      const resActualBalance = await fetch(
        `http://localhost:3000/api/auth/groups/${groupId}/actual-balance` // <<<< API L·∫§Y S·ªê D∆Ø M·ªöI
      );

      if (!resActualBalance.ok) {
        const balanceErrorData = await resActualBalance
          .json()
          .catch(() => ({}));
        throw new Error(
          balanceErrorData.message ||
            `L·∫•y s·ªë d∆∞ nh√≥m th·∫•t b·∫°i, status: ${resActualBalance.status}`
        );
      }
      const actualBalanceData = await resActualBalance.json();

      // C·∫≠p nh·∫≠t state v·ªõi th√¥ng tin nh√≥m v√† s·ªë d∆∞ th·ª±c t·∫ø
      setGroupInfo({
        ...groupDetails, // Gi·ªØ l·∫°i th√¥ng tin nh√≥m t·ª´ API ƒë·∫ßu ti√™n
        balance: actualBalanceData.balance, // G√°n s·ªë d∆∞ th·ª±c t·∫ø
      });

      // Fetch categories n·∫øu c·∫ßn thi·∫øt cho trang n√†y
      const resCats = await fetch(`http://localhost:3000/api/auth/categories`);
      if (!resCats.ok) throw new Error(`Categories status ${resCats.status}`);
      const catData = await resCats.json();
      setCategories(catData);
    } catch (err) {
      console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu nh√≥m:", err);
      setError(err.message || "Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu nh√≥m. Vui l√≤ng th·ª≠ l·∫°i.");
    } finally {
      setLoading(false);
    }
  }, [groupId]); // Ph·ª• thu·ªôc v√†o groupId

  useEffect(() => {
    if (groupId && groupId !== "settings") {
      // Ki·ªÉm tra groupId h·ª£p l·ªá
      fetchGroupData();
    }
  }, [groupId, fetchGroupData]);

  const handleCategoryClick = (cat) => {
    alert(`B·∫°n ƒë√£ ch·ªçn danh m·ª•c: ${cat.name}`);
  };

  return (
    <div className="min-h-screen bg-white relative">
      {/* Thanh tr·∫°ng th√°i */}
      <div className="bg-white shadow -mt-4 mx-4 rounded-xl p-4 flex justify-between text-sm font-medium">
        <div>ƒê√£ chi: {groupInfo?.totalSpent?.toLocaleString() || 0} ƒë</div>
        <div className="text-center text-purple-600 font-semibold">
          {groupInfo?.name || "T√™n nh√≥m"}
        </div>
        <div>
          S·ªë d∆∞ nh√≥m:{" "}{loading ? "ƒêang t·∫£i..." : groupInfo?.balance?.toLocaleString() || 0}{" "}ƒë
        </div>
      </div>

      {/* Danh m·ª•c */}
      <div className="px-4 mt-6">
        {loading && <p className="text-center text-sm">ƒêang t·∫£i...</p>}
        {error && <p className="text-center text-red-500 text-sm">{error}</p>}

        <div className="flex gap-4 overflow-x-auto pb-2">
          {categories.map((cat) => (
            <CategoryCard
              key={cat._id}
              icon={cat.icon || "üìÅ"}
              label={cat.name}
              onClick={() => handleCategoryClick(cat)}
            />
          ))}
        </div>

        {/* Ghi ch√∫ n·∫øu ch∆∞a c√≥ d·ªØ li·ªáu */}
        <div className="text-center text-sm text-gray-500 mt-10">
          <p>B·∫°n ch∆∞a c√≥ ghi ch√©p n√†o!</p>
          <p className="text-blue-500">
            H√£y ch·∫°m v√†o ƒë√¢y v√† k√©o xu·ªëng ƒë·ªÉ hi·ªÉn th·ªã d·ªØ li·ªáu m·ªõi nh·∫•t!
          </p>
        </div>
      </div>

      <FloatingButton groupId={groupId} onSuccess={fetchGroupData} />
    </div>
  );
}
